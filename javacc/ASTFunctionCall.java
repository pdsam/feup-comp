/* Generated By:JJTree: Do not edit this line. ASTFunctionCall.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTFunctionCall extends Expression {
  protected Expression ownerRef;
  protected String identifier;
  protected ASTArguments parameters;

  public ASTFunctionCall(int id) {
    super(id);
  }

  public ASTFunctionCall(MyGrammar p, int id) {
    super(p, id);
  }

  @Override
  public void dump(String prefix) {
    System.out.println(toString(prefix));
    System.out.printf("%s Function name: %s\n", prefix, identifier);
    System.out.printf("%s Owner Reference:\n", prefix);
    ownerRef.dump(prefix+"  ");

    parameters.dump(prefix + " ");
  }

  @Override
  public Object jjtAccept(MyGrammarVisitor visitor, Object data) {
    visitor.visit(this, data);

    ownerRef.jjtAccept(visitor, data);
    //TODO check if we should visit arguments
    return data;
  }
}
/* JavaCC - OriginalChecksum=33fb9ed4dec67bbb1d82c4764f788c5f (do not edit this line) */
