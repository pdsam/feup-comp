/* Generated By:JJTree: Do not edit this line. ASTBooleanLiteral.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

public
class ASTBooleanLiteral extends Expression {
  public boolean val;

  public ASTBooleanLiteral(int id) {
    super(id);
    this.type = "boolean";
  }

  public ASTBooleanLiteral(MyGrammar p, int id) {
    super(p, id);
    this.type = "boolean";
  }

  @Override
  public void dump(String prefix) {
    System.out.println(prefix + "Boolean [ " + val + " ]");
  }

  /** Accept the visitor. **/
  public Object jjtAccept(MyGrammarVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=5f3e39fe6791b396927f27f0ea30f3d3 (do not edit this line) */
