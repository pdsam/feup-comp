/* Generated By:JJTree: Do not edit this line. ASTArguments.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

import java.util.ArrayList;
import java.util.List;

public
class ASTArguments extends SimpleNode {
  public List<String> list = new ArrayList<>();

  public ASTArguments(int id) {
    super(id);
  }

  public ASTArguments(MyGrammar p, int id) {
    super(p, id);
  }

  @Override
  public void dump(String prefix) {
    if (children != null) {
      System.out.println(toString(prefix));
      for (int i = 0; i < children.length; ++i) {
        SimpleNode n = (SimpleNode)children[i];
        if (n != null) {
          n.dump(prefix + "  ");
        }
      }
    }
  }

  @Override
  public Object jjtAccept(MyGrammarVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=8958c394ec71e4c951c05f67dbb8c665 (do not edit this line) */
